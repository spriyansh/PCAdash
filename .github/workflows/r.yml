name: R-CRAN-Check

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  R-CRAN-Check:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest, r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest, r: 'devel'}
          - {os: ubuntu-latest, r: 'release'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      # Install shiny package directly
      - name: Install Shiny package directly
        run: |
          R -e 'install.packages("shiny", repos = "https://cloud.r-project.org/")'
        shell: bash

      # List installed packages and session info
      - name: List Installed Packages
        run: |
          R -e 'installed.packages()'
          R -e 'sessionInfo()'
        shell: bash

      # Proceed with package dependencies installation
      - name: Install R Package Dependencies
        run: |
          R -e 'install.packages("remotes", repos = "https://cloud.r-project.org/")'
          R -e 'remotes::install_deps(dependencies = TRUE)'
        shell: bash

      # Final package check
      - name: Check R Package
        uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: false
          error-on: "error"
          warnings-are-errors: true

      - name: Upload R CMD Check Results
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: r-cmd-check-results
          path: check/*.Rcheck
